-- Keymaps are automatically loaded on the VeryLazy event
-- Default keymaps that are always set: https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/keymaps.lua
-- Add any additional keymaps here
--local wk = require("which-key")
--vim.g.mapleader = " "
vim.keymap.set("n", "J", "mzJ`z", { noremap = true })
--
--if not vim.g.vscode then
vim.keymap.set("n", "<leader>s", ":%s///gI<Left><Left><Left><Left>")
vim.keymap.set("x", "<leader>s", ":s///gI<Left><Left><Left><Left>")

vim.keymap.set("x", "J", ":m '>+1<CR>gv=gv")
vim.keymap.set("x", "K", ":m '<-2<CR>gv=gv")
vim.keymap.set("n", "Y", "yy")
vim.keymap.set({ "n", "x" }, "<leader>y", [["+y]])
vim.keymap.set({ "n" }, "<leader>Y", [["+Y]])

vim.keymap.set({ "x", "n" }, "<C-d>", "<C-d>zz")
vim.keymap.set({ "n", "x" }, "<C-u>", "<C-u>zz")
vim.keymap.set("n", "=", function()
  local buf = vim.api.nvim_get_current_buf()
  local row = vim.api.nvim_win_get_cursor(0)[1]
  local sep = "===================================================================================================="
  vim.api.nvim_buf_set_lines(buf, row, row, false, { sep })
  require("mini.comment").toggle_lines(row + 1, row + 1)
  vim.api.nvim_win_set_cursor(0, { row + 2, 0 })
end)
--
--  local function DiffViewToggle()
--    if next(require("diffview.lib").views) == nil then
--      vim.cmd("DiffviewOpen")
--    else
--      vim.cmd("DiffviewClose")
--    end
--  end
--
--
--  local ts_repeat_move = require("nvim-treesitter.textobjects.repeatable_move")
--  local diffview = require("diffview.actions")
--  local tbi = require("telescope.builtin")
--
--  wk.register({
--    ["<C-s>"] = { vim.lsp.buf.signature_help, "Signature help", mode = { "i", "n" } },
--    ["<s-F5>"] = { ':DapTerminate<CR>:lua require"dapui".close()<CR>"', "Stop and quit debug", mode = { "n" } },
--
--
--
--    ["<leader>"] = {
--      ["f"] = {
--        [""] = { vim.lsp.buf.format, "Format file", mode = { "n" } },
--        ["d"] = { ":TroubleToggle<CR>", "Trouble Toggle", mode = { "n" } },
--
--      ["g"] = {
--        [""] = { ":LazyGit<CR>", " ", silent = false, mode = { "n" } },
--        ["co"] = { ':Git commit -S -m ""<Left>', " ", mode = { "n" }, silent = false },
--        ["g"] = { ":Git pull --rebase", " ", silent = false, mode = { "n" } },
--        ["p"] = { ":Git push -u origin ", " ", silent = false, mode = { "n" } },
--        ["m"] = { ":Git merge ", " ", silent = false, mode = { "n" } },
--        ["L"] = { ":vert Git log --show-signature | vertical resize 100<CR>", " ", silent = false, mode = { "n" } },
--        ["t"] = { ":GV<CR>", " ", silent = false, mode = { "n" } },
--        ["a"] = { ":Gwrite<CR>", " ", silent = false, mode = { "n" } },
--        ["-"] = { ":Gread<CR>", " ", silent = false, mode = { "n" } },
--        ["ch"] = { ":Git checkout ", " ", silent = false, mode = { "n" } },
--        ["sa"] = { ":Git stash<CR>", " ", silent = false, mode = { "n" } },
--        ["sp"] = { ":Git stash pop<CR>", " ", silent = false, mode = { "n" } },
--        ["d"] = { DiffViewToggle, " ", mode = { "n" } },
--        ["<Left>"] = { diffview.diffget("ours"), " ", mode = { "n", "x" } },
--        ["<Right>"] = { diffview.diffget("theirs"), " ", mode = { "n", "x" } },
--        ["<Down>"] = { diffview.diffput("local"), " ", mode = { "n", "x" } },
--        ["<Up>"] = { "<C-j>u", " ", mode = { "n", "x" } },
--        ["b"] = { ":GitBlameToggle<CR>", "", silent = false, mode = { "n", "x" } },
--      },
--
--
--      ["."] = { require("actions-preview").code_actions, "Code Actions", mode = { "n" } },
--      [";"] = { vim.lsp.buf.hover, "Hover", mode = { "n", "x" } },
--      -- ['dd'] = {
--      --     function()
--      --         if vim.diagnostic.is_disabled() then
--      --             vim.diagnostic.enable()
--      --         else
--      --             vim.diagnostic
--      --                 .disable()
--      --         end
--      --     end,
--      --     'Toggle diagnostics',
--      --     mode = { 'n', 'x' }
--      -- },
--
--      ["dd"] = { "<cmd>TroubleToggle<CR>", "", mode = { "n" } },
--    },
--    ["]d"] = {
--      function()
--        local trouble = require("trouble")
--        if not trouble.is_open() then
--          trouble.open()
--        end
--
--        require("trouble").next({ skip_groups = true, jump = true })
--      end,
--      "",
--      mode = { "n" },
--    },
--    ["[d"] = {
--      function()
--        local trouble = require("trouble")
--        if not trouble.is_open() then
--          trouble.open()
--        end
--
--        require("trouble").previous({ skip_groups = true, jump = true })
--      end,
--      "",
--      mode = { "n" },
--    },
--  })
--else
--  local vscode = require("vscode-neovim")
--  local ts_repeat_move = require("nvim-treesitter.textobjects.repeatable_move")
--  wk.register({
--    ["J"] = { ":m '>+1<CR>gv=gv", "Move selected block up", mode = { "x" } },
--    ["K"] = { ":m '<-2<CR>gv=gv", "Move selected block down", mode = { "x" } },
--    ["Y"] = { "yy", "Alternative copy full line", mode = { "n" } },
--
--    ["<C-d>"] = { "<C-d>zz", "Scroll down and center", mode = { "n", "x" } },
--    ["<C-u>"] = { "<C-u>zz", "Scroll up and center", mode = { "n", "x" } },
--
--    ["<leader>"] = {
--      ["s"] = {
--        function()
--          vscode.call("vim-search-and-replace.start")
--        end,
--        "Find in files",
--        mode = { "n", "x" },
--      },
--      ["f"] = {
--        [""] = {
--          function()
--            vscode.call("editor.action.formatDocument")
--          end,
--          "Format file",
--          mode = { "n" },
--        },
--        ["f"] = {
--          function()
--            vscode.call("workbench.action.quickOpen")
--          end,
--          "Fuzzy file search",
--          mode = { "n" },
--        },
--        ["b"] = {
--          function()
--            vscode.call("workbench.action.showAllEditors")
--          end,
--          "Show buffers",
--          silent = false,
--          mode = {
--            "n",
--          },
--        },
--        ["g"] = {
--          function()
--            vscode.call("workbench.view.scm")
--          end,
--          "Fuzzy file search in git repository",
--          mode = {
--            "n",
--          },
--        },
--        ["s"] = {
--          function()
--            vscode.call("livegrep.search")
--          end,
--          "Grep search",
--          mode = { "n" },
--        },
--        ["v"] = {
--          function()
--            vscode.call("workbench.explorer.fileView.focus")
--          end,
--          "Show file browser",
--          silent = false,
--          mode = {
--            "n",
--          },
--        },
--        ["p"] = {
--          [""] = {
--            function()
--              vscode.call("projectManager.listFavoriteProjects#sideBarFavorites")
--            end,
--            "Show marked projects",
--            silent = false,
--            mode = {
--              "n",
--            },
--          },
--          ["a"] = {
--            function()
--              vscode.call("projectManager.addToFavorites")
--            end,
--            "Add to projects",
--            mode = {
--              "n",
--            },
--          },
--        },
--      },
--
--      ["g"] = {
--        [""] = {
--          function()
--            vscode.call("workbench.view.scm")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["co"] = {
--          function()
--            vscode.call("git.commit")
--          end,
--          " ",
--          mode = { "n" },
--          silent = false,
--        },
--        ["g"] = {
--          function()
--            vscode.call("git.pullRebase")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["p"] = {
--          function()
--            vscode.call("git.push")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["m"] = {
--          function()
--            vscode.call("git.merge")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["t"] = {
--          function()
--            vscode.call("git-graph.view")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["ch"] = {
--          function()
--            vscode.call("git.checkout")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["sa"] = {
--          function()
--            vscode.call("git.stash")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["sp"] = {
--          function()
--            vscode.call("git.stashPop")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["l"] = {
--          function()
--            vscode.call("git.viewHistory")
--          end,
--          " ",
--          silent = false,
--          mode = { "n" },
--        },
--        ["b"] = {
--          function()
--            vscode.call("gitlens.toggleLineBlame")
--          end,
--          "",
--          silent = false,
--          mode = { "n", "x" },
--        },
--      },
--
--      ["h"] = {
--        ["a"] = {
--          function()
--            vscode.call("vscode-harpoon.addEditor")
--          end,
--          "Add file",
--        },
--        ["s"] = {
--          function()
--            vscode.call("vscode-harpoon.editorQuickPick")
--          end,
--          "Show files",
--        },
--        ["1"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor1")
--          end,
--          "Open mark 1",
--        },
--        ["2"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor2")
--          end,
--          "Open mark 2",
--        },
--        ["3"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor3")
--          end,
--          "Open mark 3",
--        },
--        ["4"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor4")
--          end,
--          "Open mark 4",
--        },
--        ["5"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor5")
--          end,
--          "Open mark 5",
--        },
--        ["6"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor6")
--          end,
--          "Open mark 6",
--        },
--        ["7"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor7")
--          end,
--          "Open mark 7",
--        },
--        ["8"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor8")
--          end,
--          "Open mark 8",
--        },
--        ["9"] = {
--          function()
--            vscode.call("vscode-harpoon.gotoEditor9")
--          end,
--          "Open mark 9",
--        },
--      },
--
--      ["t"] = {
--        [""] = {
--          function()
--            vscode.call("workbench.action.terminal.focus")
--          end,
--          "Enable Terminal",
--          mode = { "n" },
--        },
--        ["t"] = {
--          function()
--            vscode.call("todohighlight.listAnnotations")
--          end,
--          "Show todo list",
--          mode = { "n" },
--        },
--      },
--      ["v"] = {
--        ["s"] = {
--          function()
--            vscode.call("workbench.action.gotoSymbol")
--          end,
--          "",
--          mode = { "n" },
--        },
--        ["r"] = {
--          function()
--            vscode.call("editor.action.goToReferences")
--          end,
--          "",
--          mode = { "n" },
--        },
--        ["d"] = {
--          function()
--            vscode.call("editor.action.goToDeclaration")
--          end,
--          "",
--          mode = { "n" },
--        },
--        ["i"] = {
--          function()
--            vscode.call("editor.action.goToImplementation")
--          end,
--          "",
--          mode = { "n" },
--        },
--        [";"] = {
--          function()
--            vscode.call("editor.action.showHover")
--          end,
--          "",
--          mode = { "n" },
--        },
--        ["rn"] = {
--          function()
--            vscode.call("editor.action.rename")
--          end,
--          "",
--          mode = { "n" },
--        },
--      },
--      ["y"] = { [["+y]], "copy selection to system clipboard", mode = { "n", "x" } },
--      ["Y"] = { [["+Y]], "Copy current line to system clipboard", mode = { "n" } },
--      ["/"] = {
--        function()
--          vscode.call("editor.action.commentLine")
--        end,
--        "Comment selection",
--        mode = { "n", "x" },
--      },
--      ["="] = {
--        function()
--          local buf = vim.api.nvim_get_current_buf()
--          local row = vim.api.nvim_win_get_cursor(0)[1]
--          local sep =
--            "===================================================================================================="
--          vim.api.nvim_buf_set_lines(buf, row, row, false, { sep })
--          vim.api.nvim_win_set_cursor(0, { row + 1, 0 })
--          vscode.action("editor.action.commentLine")
--        end,
--        "Comment selection",
--        mode = { "n" },
--      },
--    },
--
--    [";"] = { ts_repeat_move.repeat_last_move_next, "next match", mode = { "n", "x", "o" } },
--    [","] = { ts_repeat_move.repeat_last_move_previous, "previous match", mode = { "n", "x", "o" } },
--
--    ["f"] = { ts_repeat_move.builtin_f, " ", mode = { "n", "x", "o" } },
--    ["F"] = { ts_repeat_move.builtin_F, " ", mode = { "n", "x", "o" } },
--    ["t"] = { ts_repeat_move.builtin_t, " ", mode = { "n", "x", "o" } },
--    ["T"] = { ts_repeat_move.builtin_T, " ", mode = { "n", "x", "o" } },
--  })
--end
