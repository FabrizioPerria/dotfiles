[
    {
        "key": "ctrl-h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminal.active"
    },
    {
        "key": "ctrl-l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminal.active"
    },
    {
        "key": "ctrl-h",
        "command": "workbench.action.navigateLeft",
        "when": "editorTextFocus || editorFocus"
    },
    {
        "key": "ctrl-l",
        "command": "workbench.action.navigateRight",
        "when": "editorTextFocus || editorFocus"
    },
    {
        "key": "ctrl-k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl-j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "ctrl-h",
        "command": "workbench.action.focusLeftGroup",
        "when": "!editorTextFocus && !terminal.active"
    },
    {
        "key": "ctrl-l",
        "command": "workbench.action.focusRightGroup",
        "when": "!editorTextFocus && !terminal.active"
    },
    {
        "key": "space f b",
        "command": "workbench.action.showAllEditors",
        "when": "vim.mode == 'Normal' && (editorFocus || !inputFocus)"
    },
    {
        "key": "space f k",
        "command": "workbench.action.inspectKeyMappings",
        "when": "vim.mode == 'Normal' && (editorFocus || !inputFocus)"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorFocus || !inputFocus)"
    },
    {
        "key": "shift-tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorFocus || !inputFocus)"
    },
    {
        "key": "space g r",
        "command": "editor.action.showReferences",
        "when": "vim.mode == 'Normal' && (editorFocus || !inputFocus)"
    },
    {
        "key": "space f v",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleSidebarVisibility",
                "workbench.files.action.focusFilesExplorer",
                "workbench.explorer.fileView.focus",
            ]
        },
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarVisible"
    },
    {
        "key": "space f v",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleSidebarVisibility",
            ]
        },
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && sideBarVisible"
    },
    {
        "key": "space f f",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "space f v",
        "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl-a \\",
        "command": "workbench.action.terminal.split",
        "when": "vim.mode == 'Normal' && terminal.active"
    },
    {
        "key": "ctrl-a \\",
        "command": "workbench.action.splitEditor",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl-a -",
        "command": "workbench.action.splitEditorDown",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    // Coding
    {
        "key": "space c d",
        "command": "workbench.action.files.openFolder",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space a",
        "command": "editor.action.codeAction",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "shift-k",
        "command": "editor.action.moveLinesUpAction",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    {
        "key": "shift-j",
        "command": "editor.action.moveLinesDownAction",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    {
        "key": "shift-k",
        "command": "editor.action.showHover",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space r n",
        "command": "editor.action.rename",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space c s",
        "command": "workbench.action.gotoSymbol",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space b d",
        "command": "workbench.action.closeActiveEditor",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
    },
    {
        "key": "space space",
        "command": "workbench.action.quickOpen",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "g r",
        "command": "editor.action.goToReferences",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "g i",
        "command": "editor.action.goToImplementation",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "ctrl-a g",
        "command": "runCommands",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
        "args": {
            "commands": [
                "workbench.view.scm",
                "workbench.scm.focus"
            ]
        }
    },
    {
        "key": "space f s",
        "command": "extension.ripgrep",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl-n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    // File Explorer
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift-s",
        "command": "runCommands",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "args": {
            "commands": [
                "workbench.action.splitEditorDown",
                "explorer.openAndPassFocus",
                "workbench.action.closeOtherEditors"
            ]
        }
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.toggleExpand",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
    },
    // Debug
    {
        "key": "f5",
        "command": "workbench.action.debug.selectandstart",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable"
    },
    {
        "key": "f12",
        "command": "workbench.action.debug.stop",
        "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && !focusedSessionIsAttached"
    },
    {
        "key": "space d o",
        "command": "workbench.action.debug.stepOver",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "f9",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space d e",
        "command": "editor.debug.action.showDebugHover",
        "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "ctrl-a shift-d",
        "command": "workbench.view.extension.dockerView",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl-a z",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl-a x",
        "command": "workbench.action.terminal.kill",
        "when": "vim.mode == 'Normal' && terminal.active"
    },
    {
        "key": "ctrl-a x",
        "command": "workbench.action.closeActiveEditor",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.continue",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "space /",
        "command": "editor.action.commentLine",
        "when": "(vim.mode == 'Normal'|| vim.mode == 'VisualLine') && editorTextFocus && !editorReadonly"
    }
]
